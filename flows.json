[
    {
        "id": "55b2ce4ea70984fe",
        "type": "tab",
        "label": "Testing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "838e54b719ad8caa",
        "type": "tab",
        "label": "Netzwerk-Dummy",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5d3034dc83dfbde2",
        "type": "tab",
        "label": "DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3c770aff.9ba2a6",
        "type": "ui_tab",
        "name": "Anmeldung",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ecd475138fd07684",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6b5b1f74.6f562",
        "type": "ui_group",
        "name": "Kreiss√§ge",
        "tab": "a6b74173.c7ccc",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "a6b74173.c7ccc",
        "type": "ui_tab",
        "name": "Maschinenlaufzeit",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4ce63ea5.5bc4b",
        "type": "ui_tab",
        "name": "Auswertung",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2b7ac01b.fc984",
        "type": "ui_group",
        "name": "SENSORS",
        "tab": "99ab8dc5.f435c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "99ab8dc5.f435c",
        "type": "ui_tab",
        "name": "HTTP",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fe1131055cdbcae8",
        "type": "sqliteQueuedDb",
        "db": "db",
        "mode": "RWC"
    },
    {
        "id": "e03e87e4bc6a7ec3",
        "type": "sqlitedb",
        "db": "",
        "mode": "RWC"
    },
    {
        "id": "0c0e7f63d56c01d5",
        "type": "switch",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "25",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "d27877569f238376"
            ],
            [
                "21e9a0ce6da2abde"
            ]
        ]
    },
    {
        "id": "d27877569f238376",
        "type": "change",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "d02e53f7e1c98970"
            ]
        ]
    },
    {
        "id": "21e9a0ce6da2abde",
        "type": "change",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 280,
        "wires": [
            [
                "d02e53f7e1c98970"
            ]
        ]
    },
    {
        "id": "476ec21445060499",
        "type": "inject",
        "z": "55b2ce4ea70984fe",
        "name": "Test Inject",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "30",
        "payloadType": "num",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "de44a2051b801b52"
            ]
        ]
    },
    {
        "id": "d02e53f7e1c98970",
        "type": "rbe",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 870,
        "y": 240,
        "wires": [
            [
                "2329d7c887f5f353",
                "f7c28187b1ba06d2",
                "48adfc17be024cec"
            ]
        ]
    },
    {
        "id": "0662217a96170239",
        "type": "debug",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 320,
        "wires": []
    },
    {
        "id": "2329d7c887f5f353",
        "type": "switch",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 320,
        "wires": [
            [
                "6d48af1112bb95b5"
            ],
            [
                "5f9f527e2ee9e2af"
            ]
        ]
    },
    {
        "id": "6d48af1112bb95b5",
        "type": "function",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "func": "var start  = Math.floor(Date.now()/1000);\n\nglobal.set(\"startzeit\", start);\n\nvar msg1 = {payload : start};\n\n\nreturn [msg1];\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 280,
        "wires": [
            [
                "0662217a96170239"
            ]
        ]
    },
    {
        "id": "5f9f527e2ee9e2af",
        "type": "function",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "func": "var start = global.get(\"startzeit\");\nvar nutzer = global.get(\"nutzer\");\nvar end   = Math.floor(Date.now()/1000);\n\nvar dauer = end - start;\n\nvar msg1 = {payload : start};\nvar msg2 = {payload : end};\n\nsqlstatement = \"INSERT INTO daten(nutzer, time, dauer, maschine) values ('\" + nutzer + \"', \" + start + \", \" + dauer + \", 'Kreiss√§ge')\";\n\nmsg.topic = sqlstatement;\n\n//msg.payload = {value:msg.payload, start:start, end:end, sql:sqlstatement};\n\n// return [msg1, msg2];\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 360,
        "wires": [
            [
                "0662217a96170239"
            ]
        ]
    },
    {
        "id": "48adfc17be024cec",
        "type": "ui_gauge",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "group": "6b5b1f74.6f562",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "",
        "label": "",
        "format": "",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1050,
        "y": 240,
        "wires": []
    },
    {
        "id": "91877fa0c133345d",
        "type": "moment",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Berlin",
        "x": 140,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "4636a8bef56ff67c",
        "type": "debug",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "f7c28187b1ba06d2",
        "type": "debug",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 160,
        "wires": []
    },
    {
        "id": "de44a2051b801b52",
        "type": "function",
        "z": "55b2ce4ea70984fe",
        "name": "RandFloat",
        "func": "var number = msg.payload\nmsg.payload = (Math.random() * (number - 1) + 1).toFixed(2).toString()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 180,
        "wires": [
            [
                "0c0e7f63d56c01d5",
                "4636a8bef56ff67c"
            ]
        ]
    },
    {
        "id": "3fb39f0217826977",
        "type": "function",
        "z": "55b2ce4ea70984fe",
        "name": "RandNum",
        "func": "var number = msg.payload\nmsg.payload = parseFloat(Math.floor(Math.random() * number - 1) + 1)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "18714dd186fd682c",
        "type": "uibuilder",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "topic": "",
        "url": "bauer_planer",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "oldUrl": "uibuiler_Test",
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "5.0.2",
        "x": 120,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c09594e2487d35a2",
        "type": "uibuilder",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "topic": "",
        "url": "login",
        "fwdInMessages": false,
        "allowScripts": true,
        "allowStyles": true,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "5.0.2",
        "x": 300,
        "y": 640,
        "wires": [
            [
                "09e8bd67a7340431"
            ],
            []
        ]
    },
    {
        "id": "5543c55d1be31a28",
        "type": "debug",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 640,
        "wires": []
    },
    {
        "id": "399ab220e2eb7218",
        "type": "inject",
        "z": "55b2ce4ea70984fe",
        "name": "Test Injection",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 640,
        "wires": [
            [
                "e3a23f8e7e241cfa"
            ]
        ]
    },
    {
        "id": "405b2fa8f745e239",
        "type": "function",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "func": "var userid=\"\";\nvar password=\"\";\nvar sqlQuery=\"\";\n\n\nif (msg.topic=='1'){\n     userid=msg.payload;\n}\n\nif (msg.topic=='2'){\n     password=msg.payload;\n    // sqlQuery = \"SELECT * FROM user WHERE userID=\"+userid+\" AND passwort=\"+password;\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "09e8bd67a7340431",
        "type": "function",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "func": "if (msg.payload==\"A message from the sharp end!\"\n){\n    msg.payload=\"YES\"\n    return msg;\n}else{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 600,
        "wires": [
            [
                "5543c55d1be31a28"
            ]
        ]
    },
    {
        "id": "e3a23f8e7e241cfa",
        "type": "uibuilder",
        "z": "55b2ce4ea70984fe",
        "name": "",
        "topic": "",
        "url": "loginTest",
        "fwdInMessages": false,
        "allowScripts": true,
        "allowStyles": true,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "5.0.2",
        "x": 310,
        "y": 740,
        "wires": [
            [
                "09e8bd67a7340431"
            ],
            []
        ]
    },
    {
        "id": "f86352c2acd99e68",
        "type": "http response",
        "z": "838e54b719ad8caa",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 540,
        "y": 520,
        "wires": []
    },
    {
        "id": "feb822208cfa1124",
        "type": "json",
        "z": "838e54b719ad8caa",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 530,
        "y": 640,
        "wires": [
            [
                "ebf385bd70afe870"
            ]
        ]
    },
    {
        "id": "fa5d9b0a5e4fec29",
        "type": "debug",
        "z": "838e54b719ad8caa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 970,
        "y": 540,
        "wires": []
    },
    {
        "id": "3070a9f7c3e912b4",
        "type": "ui_text",
        "z": "838e54b719ad8caa",
        "group": "2b7ac01b.fc984",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Sensor Name",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 980,
        "y": 600,
        "wires": []
    },
    {
        "id": "6d3b1b988dfe8062",
        "type": "ui_gauge",
        "z": "838e54b719ad8caa",
        "name": "",
        "group": "2b7ac01b.fc984",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "¬∫C",
        "format": "{{value}}",
        "min": 0,
        "max": "38",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 970,
        "y": 660,
        "wires": []
    },
    {
        "id": "e37fec3a9f818d52",
        "type": "ui_gauge",
        "z": "838e54b719ad8caa",
        "name": "",
        "group": "2b7ac01b.fc984",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#0080ff",
            "#0062c4",
            "#002f5e"
        ],
        "seg1": "",
        "seg2": "",
        "x": 960,
        "y": 720,
        "wires": []
    },
    {
        "id": "8b03c905b53f0ede",
        "type": "ui_gauge",
        "z": "838e54b719ad8caa",
        "name": "",
        "group": "2b7ac01b.fc984",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": 0,
        "max": "1200",
        "colors": [
            "#b366ff",
            "#8000ff",
            "#440088"
        ],
        "seg1": "",
        "seg2": "",
        "x": 960,
        "y": 780,
        "wires": []
    },
    {
        "id": "ebf385bd70afe870",
        "type": "function",
        "z": "838e54b719ad8caa",
        "name": "JSON or URL Encoded",
        "func": "var msg0 = { payload: msg.payload.api_key };\nvar msg1 = { payload: msg.payload.sensor };\nvar msg2 = { payload: msg.payload.value1 };\nvar msg3 = { payload: msg.payload.value2 };\nvar msg4 = { payload: msg.payload.value3 };\n\nreturn [msg0, msg1, msg2, msg3, msg4];",
        "outputs": 5,
        "noerr": 0,
        "x": 730,
        "y": 640,
        "wires": [
            [
                "fa5d9b0a5e4fec29"
            ],
            [
                "3070a9f7c3e912b4"
            ],
            [
                "6d3b1b988dfe8062"
            ],
            [
                "e37fec3a9f818d52"
            ],
            [
                "8b03c905b53f0ede"
            ]
        ]
    },
    {
        "id": "0b9474555b528c56",
        "type": "http in",
        "z": "838e54b719ad8caa",
        "name": "",
        "url": "update-sensor",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 571,
        "wires": [
            [
                "f86352c2acd99e68",
                "fa5d9b0a5e4fec29",
                "feb822208cfa1124"
            ]
        ]
    },
    {
        "id": "6dc9de411da24725",
        "type": "http response",
        "z": "838e54b719ad8caa",
        "name": "HTTP Antwort an den Mikrocontroller",
        "statusCode": "200",
        "headers": {},
        "x": 930,
        "y": 120,
        "wires": []
    },
    {
        "id": "239e15fb2c0c49ae",
        "type": "http in",
        "z": "838e54b719ad8caa",
        "name": "",
        "url": "/get-sensor",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 431,
        "wires": [
            [
                "fdc9058fa5cef60b"
            ]
        ]
    },
    {
        "id": "3fe3f4204abdd9f2",
        "type": "http response",
        "z": "838e54b719ad8caa",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 660,
        "y": 391,
        "wires": []
    },
    {
        "id": "fdc9058fa5cef60b",
        "type": "function",
        "z": "838e54b719ad8caa",
        "name": "",
        "func": "msg.payload = {\"value1\":24.25, \"value2\":49.54, \"value3\":1005.14};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 431,
        "wires": [
            [
                "3fe3f4204abdd9f2",
                "d85f36883d7b1c7e"
            ]
        ]
    },
    {
        "id": "d85f36883d7b1c7e",
        "type": "debug",
        "z": "838e54b719ad8caa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 459,
        "wires": []
    },
    {
        "id": "acbd09f7a15ccfad",
        "type": "debug",
        "z": "838e54b719ad8caa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 220,
        "wires": []
    },
    {
        "id": "3e926d2fc9bc5dcf",
        "type": "http in",
        "z": "838e54b719ad8caa",
        "name": "",
        "url": "/sendDummyData",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 171,
        "wires": [
            [
                "5f8fa0c6c734d247"
            ]
        ]
    },
    {
        "id": "5f8fa0c6c734d247",
        "type": "function",
        "z": "838e54b719ad8caa",
        "name": "Daten Auslesen und Konvertieren",
        "func": "var userID = msg.payload.UserID;\nvar maschinenName = msg.payload.MaschinenName;\nvar dauer = msg.payload.Dauer;\nvar timestamp = new Date();\nvar ende = timestamp;\nvar calculation = timestamp.getTime() - dauer;\nvar anfang = new Date(calculation);\nvar strom = msg.payload.Strom;\n\nmsg.payload = \"Input: UserID= \" + userID + \"; MaschinenName= \" + maschinenName + \"; Anfang= \" + anfang + \"; Ende= \" + ende + \"; Dauer in Millisekunden= \" + dauer + \"; Strom=\" + strom + \" Wh\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 171,
        "wires": [
            [
                "acbd09f7a15ccfad",
                "6dc9de411da24725"
            ]
        ]
    },
    {
        "id": "780f1733ac8f59d3",
        "type": "comment",
        "z": "838e54b719ad8caa",
        "name": "Hinweis",
        "info": "Der Mikrocontroller sendet einen GET Request an die Domain http://(IP des eigenen Rechners):1880/sendDummyData.\n\nDabei werden ein paar Daten angeh√§ngt.\nDiese k√∂nnen dann in der Funktion √ºber den Message Payload abgefragt werden.\n\nDie Funktion kann als Vorlage f√ºr den eigentlichen Server verwendet werden oder einfach nur zum Testen.",
        "x": 490,
        "y": 120,
        "wires": []
    },
    {
        "id": "681a66ce7a2f547e",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1030,
        "y": 620,
        "wires": []
    },
    {
        "id": "a058b1db0a631448",
        "type": "change",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO data VALUES(1233, \"test maschine\", '2022-06-10 10:00:00', '2022-06-10 13:00:00', '05:00',1200)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 660,
        "wires": [
            [
                "bdccecb66d282599"
            ]
        ]
    },
    {
        "id": "4e5d80bf25155cb8",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "fixed",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 690,
        "y": 480,
        "wires": [
            [
                "9383b262ea8775b9"
            ]
        ]
    },
    {
        "id": "9a4db932c1c3cc0e",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "fixed",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 710,
        "y": 620,
        "wires": [
            [
                "681a66ce7a2f547e",
                "a058b1db0a631448"
            ]
        ]
    },
    {
        "id": "bdccecb66d282599",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "fixed",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 870,
        "y": 660,
        "wires": [
            [
                "681a66ce7a2f547e"
            ]
        ]
    },
    {
        "id": "9383b262ea8775b9",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 480,
        "wires": []
    },
    {
        "id": "438e0ca4fdb8d452",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Tabellen erstellen:",
        "info": "",
        "x": 190,
        "y": 120,
        "wires": []
    },
    {
        "id": "2510bb3d12f78820",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Testdaten eintragen:",
        "info": "",
        "x": 190,
        "y": 460,
        "wires": []
    },
    {
        "id": "29484a905b1dc024",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "FK muss bei jedem INSERT aktiviert werden",
        "info": "",
        "x": 1310,
        "y": 620,
        "wires": []
    },
    {
        "id": "66e8676fc65f55ec",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Tabellen l√∂schen:",
        "info": "",
        "x": 180,
        "y": 740,
        "wires": []
    },
    {
        "id": "f731044113a3b2ca",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "CREATE user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE user( userid INTEGER PRIMARY KEY AUTOINCREMENT, password TEXT, lastname TEXT NOT NULL, firstName TEXT NOT NULL, admin BOOLEAN NOT NULL, permission INTEGER NOT NULL, company TEXT )",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 160,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "a8445b8c3d6fbfb9",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "CREATE machine",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE machine( machineName TEXT PRIMARY KEY NOT NULL, permission INTEGER NOT NULL, setUpTime INTEGER NOT NULL, cost INTEGER NOT NULL, materialConsumption INTEGER , area TEXT, factor INTEGER NOT NULL )",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 240,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "396129c473119cc1",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "CREATE data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE data( userid INTEGER NOT NULL, machineName TEXT NOT NULL, start INTEGER NOT NULL, end INTEGER NOT NULL, duration INTEGER NOT NULL, power INTEGER NOT NULL, PRIMARY KEY (userid, machineName ) FOREIGN KEY(userid) REFERENCES user(userid), FOREIGN KEY(machineName) REFERENCES machine(machineName) )",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 280,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "8e8e6ef6f4263a04",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO user(password, lastname, firstName, admin, permission, company) VALUES( 12345, \"mustermann\", \"muster\", true, 5, NULL)",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 500,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "0c907df22b3c7411",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT machine",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO machine VALUES(\"test maschine\", 2, 5, 0.99, NULL, \"holz\", 1)",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 540,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "8a04915b88d39f32",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Set seq",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO sqlite_sequence VALUES ('user',99)",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 200,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "6dbc99d0e84b8ab1",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Aktive FK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PRAGMA foreign_keys = ON;",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "f18e6efd5f581963",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Incorrrect INSERT data ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PRAGMA foreign_keys = ON;",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 620,
        "wires": [
            [
                "9a4db932c1c3cc0e"
            ]
        ]
    },
    {
        "id": "7159f3c8631e7281",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "INSERT data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "INSERT INTO data VALUES(100, \"test maschine\", 600000, 800000, 5000,1200)",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 580,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "c76761fc008bd71c",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 520,
        "y": 1760,
        "wires": [
            [
                "16a17ec75e5c2325"
            ]
        ]
    },
    {
        "id": "9a67a9a52a31daff",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1620,
        "wires": []
    },
    {
        "id": "16a17ec75e5c2325",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"SELECT machineName, start, end, duration, power FROM user JOIN data USING (userid) WHERE userid =\" + msg.payload +\"  ORDER BY start \"}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1760,
        "wires": [
            [
                "e13f58bcd3c4ceb0"
            ]
        ]
    },
    {
        "id": "46a8ceaf53672cc9",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "All Users",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT *  FROM user;",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 1560,
        "wires": [
            [
                "e13f58bcd3c4ceb0"
            ]
        ]
    },
    {
        "id": "f2ec7456b5e2c00f",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "All Machines",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT *  FROM machine;",
        "payload": "",
        "payloadType": "date",
        "x": 510,
        "y": 1600,
        "wires": [
            [
                "e13f58bcd3c4ceb0"
            ]
        ]
    },
    {
        "id": "067379df183c3906",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering machineName",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "test maschine",
        "payloadType": "str",
        "x": 540,
        "y": 1840,
        "wires": [
            [
                "07b0c52ed034c4b8"
            ]
        ]
    },
    {
        "id": "07b0c52ed034c4b8",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"SELECT userid, start, end, duration, power FROM data JOIN machine USING (machineName) WHERE machineName = '\"+ msg.payload +\"' ORDER BY start \"}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1840,
        "wires": [
            [
                "e13f58bcd3c4ceb0"
            ]
        ]
    },
    {
        "id": "04ce299fc5aca017",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Entering UserID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 520,
        "y": 1800,
        "wires": [
            [
                "e87ee1fa3f347497"
            ]
        ]
    },
    {
        "id": "e87ee1fa3f347497",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "Select Data",
        "func": "var msg = { \"topic\": \"SELECT *  FROM user where userid=\" + msg.payload +\"\" };\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1800,
        "wires": [
            [
                "e13f58bcd3c4ceb0"
            ]
        ]
    },
    {
        "id": "f5cd1f1d2589e3c5",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Alle Eintr√§ge von einem User:",
        "info": "",
        "x": 280,
        "y": 1760,
        "wires": []
    },
    {
        "id": "634ea6f6bfec5f4b",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Pers√∂nliche Daten eines Nutzers zur√ºck geben:",
        "info": "",
        "x": 220,
        "y": 1800,
        "wires": []
    },
    {
        "id": "b727e85cbbd4a4a2",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "Alle Eintr√§ge zu einer Maschine:",
        "info": "",
        "x": 270,
        "y": 1840,
        "wires": []
    },
    {
        "id": "be42a89a7a23dd3b",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Anzahl der Nutzer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT COUNT(*) FROM user",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 1640,
        "wires": [
            [
                "e13f58bcd3c4ceb0"
            ]
        ]
    },
    {
        "id": "fa3fc17a5dcdb096",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Anzahl der Maschinen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT COUNT(*) FROM machine",
        "payload": "",
        "payloadType": "date",
        "x": 540,
        "y": 1680,
        "wires": [
            [
                "e13f58bcd3c4ceb0"
            ]
        ]
    },
    {
        "id": "f2b5c22dd45c8469",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "Summe von Dauer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT SUM(duration) FROM data",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 1720,
        "wires": [
            [
                "e13f58bcd3c4ceb0"
            ]
        ]
    },
    {
        "id": "60155cae6b633734",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "DROP user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE user",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 860,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "1b9261494c183cbb",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "DROP machine",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE machine",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 820,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "bf292948e76d2dfd",
        "type": "inject",
        "z": "5d3034dc83dfbde2",
        "name": "DROP data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE data",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 780,
        "wires": [
            [
                "4e5d80bf25155cb8"
            ]
        ]
    },
    {
        "id": "e13f58bcd3c4ceb0",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "fixed",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 990,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "a848b25139641d9e",
        "type": "comment",
        "z": "5d3034dc83dfbde2",
        "name": "DB Queries:",
        "info": "## ",
        "x": 170,
        "y": 1160,
        "wires": []
    },
    {
        "id": "e0e4da376e30411d",
        "type": "ui_text_input",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "label": "UserID",
        "tooltip": "",
        "group": "b66f7e8f9f613abd",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 380,
        "y": 1200,
        "wires": [
            [
                "ec76d3c106f2ba55"
            ]
        ]
    },
    {
        "id": "0c16a704bf1052ae",
        "type": "ui_text_input",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "label": "Password",
        "tooltip": "",
        "group": "b66f7e8f9f613abd",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 380,
        "y": 1240,
        "wires": [
            [
                "5e2c9d5b6bd0d002"
            ]
        ]
    },
    {
        "id": "f4ccbcacc88ee4c5",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "CheckPassword",
        "func": "if ( msg.payload != \"\"){   \n    if (msg.payload[0].true == 1){\n        var msg = { \"topic\": \"SELECT password FROM user WHERE userid =\" + global.get(\"loginUserid\") +\" \"}\n         msg.payload = \"\";\n        \n    }\n    } else {\n        var msg = {payload: \"User doesn't exist\"}\n    \n    }\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1340,
        "wires": [
            [
                "63832fe4bddae42b"
            ]
        ]
    },
    {
        "id": "23a3cce40318f1d3",
        "type": "ui_button",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "group": "b66f7e8f9f613abd",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Login",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 1280,
        "wires": [
            [
                "ac04c04fc825eb27"
            ]
        ]
    },
    {
        "id": "010526cddd61ddde",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1340,
        "wires": []
    },
    {
        "id": "ec76d3c106f2ba55",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "func": "\nif (msg.payload !== \"\"){\n    global.set(\"loginUserid\", msg.payload)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "5e2c9d5b6bd0d002",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "func": "\nif (msg.payload !== \"\"){\n    global.set(\"loginPassword\", msg.payload)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "3e05a542f835d05b",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "checkingPassFunk",
        "func": "dbPassword = msg.payload[0].password;\nif (dbPassword ==  global.get(\"loginPassword\") ){\n    var msg = {payload: \"Login succeeded\"}\n} else {\n    var msg = {payload: \"Password is incorrect\"}\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1460,
        "wires": [
            [
                "23e1f826ae14953e"
            ]
        ]
    },
    {
        "id": "23e1f826ae14953e",
        "type": "debug",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1460,
        "wires": []
    },
    {
        "id": "ac04c04fc825eb27",
        "type": "function",
        "z": "5d3034dc83dfbde2",
        "name": "CheckUserExists",
        "func": "var msg = { \"topic\": \"SELECT true FROM user WHERE userid =\" + global.get(\"loginUserid\") +\" \"}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1280,
        "wires": [
            [
                "f6783a467b16ddad"
            ]
        ]
    },
    {
        "id": "63832fe4bddae42b",
        "type": "switch",
        "z": "5d3034dc83dfbde2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 1340,
        "wires": [
            [
                "010526cddd61ddde"
            ],
            [
                "e59402810e90d97e"
            ]
        ]
    },
    {
        "id": "f6783a467b16ddad",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "fixed",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 790,
        "y": 1280,
        "wires": [
            [
                "f4ccbcacc88ee4c5"
            ]
        ]
    },
    {
        "id": "e59402810e90d97e",
        "type": "queuedsqlite",
        "z": "5d3034dc83dfbde2",
        "mydb": "fe1131055cdbcae8",
        "sqlquery": "msg.topic",
        "dbName": "fixed",
        "db": "C:\\Users\\User\\.node-red\\projects\\MonitoringApp_Stand22-06-22\\db",
        "sql": "",
        "name": "db",
        "x": 790,
        "y": 1400,
        "wires": [
            [
                "3e05a542f835d05b"
            ]
        ]
    }
]